{"version":3,"sources":["logo.svg","components/Introduction.jsx","components/Experience.jsx","components/Education.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","Introduction","AOS","init","duration","className","id","style","backgroundColor","data-aos","data-aos-duration","src","process","alt","width","borderRadius","href","target","rel","fontSize","color","padding","Component","experienceList","projects","Experience","map","experience","i","logo","key","position","institution","location","fontWeight","project","paddingRight","description","line","j","educationList","education","Education","universityName","collegeName","degree","courses","Grade","App","data-spy","data-target","data-offset","Boolean","window","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.35eb5695.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React, { Component } from 'react';\nimport AOS from 'aos';\nimport '../App.css';\n\nconst picture = process.env.PUBLIC_URL + \"/assets/images/anish.jpg\";\n\nclass Introduction extends Component {\n    componentDidMount() {\n        AOS.init({\n            duration: 0\n        })\n    }\n    render() {\n        return (\n        < div className = \"Section\" id = \"introduction\" style = {{ backgroundColor: \"#F1F1F1\" }}>\n        <div data-aos=\"fade-in\" data-aos-duration=\"2000\" className=\"IntroContent\">\n            <br /><br /><br /><br />\n            <img src={picture} alt=\"Meri tasveer\" className=\"no-select\" style={{ width: \"20vw\", borderRadius: \"50%\" }} data-aos=\"zoom-out-down\" data-aos-duration=\"1500\" />\n            <br /><br />\n            <div className=\"Name no-select\">Pratusha Singh</div>\n            <div>\n                <a href=\"https://github.com/pratushasingh\" target=\"_blank\" rel=\"noopener noreferrer\"><i className=\"fab fa-github\" style={{ fontSize: \"2em\", color: \"black\", padding: \"1vw\" }}></i></a>\n                <a href=\"https://www.linkedin.com/in/pratushasingh/\" target=\"_blank\" rel=\"noopener noreferrer\"><i className=\"fab fa-linkedin\" style={{ fontSize: \"2em\", color: \"black\", padding: \"1vw\" }}></i></a>\n            </div>\n        </div>\n    </div>)\n            \n        }\n    }\n\n    export default Introduction;","import React, { Component } from 'react';\nimport myexperience from '../data/myexperience.json';\nimport '../App.css';\nimport AOS from 'aos';\n\nconst experienceList = myexperience.projects;\n\nclass Experience extends Component{\n    componentDidMount(){\n        AOS.init({\n            duration: 0\n        })\n    }\n    render(){\n        return (\n            <div className=\"Section\" id = \"experience\">\n            <div className=\"Heading\" data-aos=\"fade-in\" data-aos-duration=\"2000\">Experience</div>\n            <div className=\"card-container\" data-aos = \"fade\" data-aos-duration = \"1000\">\n                {\n                    experienceList.map((experience, i) => {\n                        let logo = process.env.PUBLIC_URL + experience.logo;\n                        return (\n                            <div className=\"row\" key={i}>\n                                <div className=\"card\" data-aos = \"slide-right\" data-aos-duration = \"1500\" style = {{backgroundColor: \"#F1F1F1\"}} key={i}>\n                                    <div className=\"card-content\">\n                                        <div className=\"card-title\">{experience.position}</div>\n                                        <img src={logo} alt=\"Logo\" className=\"Logo no-select\" />\n                                    </div>\n\n                                    <div className = \"college\">{experience.institution}</div>\n                                    <div>{experience.location}</div>\n                                    <div className = \"Duration\">{experience.duration}</div>\n                                    <div style = {{fontWeight: \"bold\"}}>{experience.project}</div>\n                                    <div className=\"card-content\" style = {{paddingRight: \"25px\"}}>\n                                    <ul>\n                                        {experience.description.map((line, j) => {\n                                            return (\n                                                <li className = \"Description\" key={j}>{line}</li>\n                                            );\n                                        })}\n                                    </ul>\n                                    </div>\n                                </div>\n                            </div>\n                        );\n                    })\n                }\n\n            </div>\n        </div>\n\n        )\n\n    }\n}\n\nexport default Experience;","import React, { Component } from 'react';\nimport myeducation from '../data/myeducation.json';\nimport '../App.css';\nimport AOS from 'aos';\n\nconst educationList = myeducation.education;\n\nclass Education extends Component{\n    componentDidMount() {\n        AOS.init({\n            duration: 0\n        })\n    }\n    render(){\n        return (\n            <div className=\"Section\" style = {{backgroundColor: \"#F1F1F1\"}} id = \"education\">\n            <div className=\"Heading\" data-aos=\"fade-in\" data-aos-duration=\"2000\">Education</div>\n            <div className=\"card-container\" data-aos = \"fade\" data-aos-duration = \"1000\">\n                {\n                    educationList.map((education, i) => {\n                        let logo = process.env.PUBLIC_URL + education.logo;\n                        return (\n                            <div className=\"row\" key = {i}>\n                                <div className=\"card\" data-aos = \"slide-left\" data-aos-duration = \"1500\" key={i}>\n                                    <div className=\"card-content\">\n                                        <div className=\"card-title\">{education.universityName}</div>\n                                        <img src={logo} alt=\"logo\" className=\"Logo no-select\" />\n                                    </div>\n                                    <br />\n                                    <div className=\"college\">{education.collegeName}</div>\n                                    <div style = {{fontWeight: \"bold\"}}>{education.degree}</div>\n                                    <div className=\"Duration\">{education.duration}</div>\n                                    <div>{education.location}</div>\n                                    <br/>\n                                    <div className=\"card-content\">\n                                        <div>Courses: {education.courses}</div>\n                                        <br/>\n                                        <div style = {{fontWeight: \"bold\"}}>Grade: {education.Grade}</div>\n                                    </div>\n                                </div>\n                            </div>\n                        );\n                    })\n                }\n            </div>\n        </div>\n        );\n    }\n\n}\n\nexport default Education;","import React from 'react';\nimport logo from './logo.svg';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\nimport Introduction from './components/Introduction';\nimport Experience from './components/Experience';\nimport Education from './components/Education';\n\nfunction App() {\n  return (\n    <div className=\"App\" data-spy=\"scroll\" data-target=\".navbar\" data-offset=\"50\">\n    <Introduction />\n    <Education />\n    <Experience />\n    </div>\n  );\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}